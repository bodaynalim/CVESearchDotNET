//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.8.0.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------


namespace Cve.Net.Search.Domain.Database.CveXmlJsonModels.NVDApi.Cve
{
#pragma warning disable // Disable all warnings

    /// <summary>
    /// CVE model from NVD API 2.0 https://nvd.nist.gov/developers/vulnerabilities
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CveItemNewApi
    {
        [Newtonsoft.Json.JsonProperty("cve", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Cve_item Cve { get; set; } = new Cve_item();
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Cve_item
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^CVE-[0-9]{4}-[0-9]{4,}$")]
        public string Id { get; set; }

        [Newtonsoft.Json.JsonProperty("sourceIdentifier", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SourceIdentifier { get; set; }

        [Newtonsoft.Json.JsonProperty("vulnStatus", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VulnStatus { get; set; }

        [Newtonsoft.Json.JsonProperty("published", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Published { get; set; }

        [Newtonsoft.Json.JsonProperty("lastModified", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset LastModified { get; set; }

        [Newtonsoft.Json.JsonProperty("evaluatorComment", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EvaluatorComment { get; set; }

        [Newtonsoft.Json.JsonProperty("evaluatorSolution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EvaluatorSolution { get; set; }

        [Newtonsoft.Json.JsonProperty("evaluatorImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string EvaluatorImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("cisaExploitAdd", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset CisaExploitAdd { get; set; }

        [Newtonsoft.Json.JsonProperty("cisaActionDue", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset CisaActionDue { get; set; }

        [Newtonsoft.Json.JsonProperty("cisaRequiredAction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CisaRequiredAction { get; set; }

        [Newtonsoft.Json.JsonProperty("cisaVulnerabilityName", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string CisaVulnerabilityName { get; set; }

        [Newtonsoft.Json.JsonProperty("descriptions", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.ICollection<Lang_string> Descriptions { get; set; } = new System.Collections.ObjectModel.Collection<Lang_string>();

        [Newtonsoft.Json.JsonProperty("references", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [System.ComponentModel.DataAnnotations.MaxLength(500)]
        public System.Collections.Generic.ICollection<Reference> References { get; set; } = new System.Collections.ObjectModel.Collection<Reference>();

        /// <summary>
        /// Metric scores for a vulnerability as found on NVD.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("metrics", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Metrics Metrics { get; set; }

        [Newtonsoft.Json.JsonProperty("weaknesses", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Weakness> Weaknesses { get; set; }

        [Newtonsoft.Json.JsonProperty("configurations", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<Config> Configurations { get; set; }

        [Newtonsoft.Json.JsonProperty("vendorComments", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<VendorComment> VendorComments { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CvssV2
    {
        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Source { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public CvssV2Type Type { get; set; }

        [Newtonsoft.Json.JsonProperty("cvssData", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Json CvssData { get; set; } = new Json();

        [Newtonsoft.Json.JsonProperty("baseSeverity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string BaseSeverity { get; set; }

        [Newtonsoft.Json.JsonProperty("exploitabilityScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ExploitabilityScore { get; set; }

        [Newtonsoft.Json.JsonProperty("impactScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ImpactScore { get; set; }

        [Newtonsoft.Json.JsonProperty("acInsufInfo", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool AcInsufInfo { get; set; }

        [Newtonsoft.Json.JsonProperty("obtainAllPrivilege", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ObtainAllPrivilege { get; set; }

        [Newtonsoft.Json.JsonProperty("obtainUserPrivilege", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ObtainUserPrivilege { get; set; }

        [Newtonsoft.Json.JsonProperty("obtainOtherPrivilege", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool ObtainOtherPrivilege { get; set; }

        [Newtonsoft.Json.JsonProperty("userInteractionRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool UserInteractionRequired { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CvssV30
    {
        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Source { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public CvssV30Type Type { get; set; }

        [Newtonsoft.Json.JsonProperty("cvssData", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Json2 CvssData { get; set; } = new Json2();

        [Newtonsoft.Json.JsonProperty("exploitabilityScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ExploitabilityScore { get; set; }

        [Newtonsoft.Json.JsonProperty("impactScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ImpactScore { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class CvssV31
    {
        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Source { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        public CvssV31Type Type { get; set; }

        [Newtonsoft.Json.JsonProperty("cvssData", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Json3 CvssData { get; set; } = new Json3();

        [Newtonsoft.Json.JsonProperty("exploitabilityScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ExploitabilityScore { get; set; }

        [Newtonsoft.Json.JsonProperty("impactScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double ImpactScore { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Lang_string
    {
        [Newtonsoft.Json.JsonProperty("lang", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Lang { get; set; }

        [Newtonsoft.Json.JsonProperty("value", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(4096)]
        public string Value { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Reference
    {
        [Newtonsoft.Json.JsonProperty("url", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^(ftp|http)s?://\S+$")]
        public string Url { get; set; }

        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Source { get; set; }

        [Newtonsoft.Json.JsonProperty("tags", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<string> Tags { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class VendorComment
    {
        [Newtonsoft.Json.JsonProperty("organization", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Organization { get; set; }

        [Newtonsoft.Json.JsonProperty("comment", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Comment { get; set; }

        [Newtonsoft.Json.JsonProperty("lastModified", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset LastModified { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Weakness
    {
        [Newtonsoft.Json.JsonProperty("source", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Source { get; set; }

        [Newtonsoft.Json.JsonProperty("type", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Type { get; set; }

        [Newtonsoft.Json.JsonProperty("description", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Lang_string> Description { get; set; } = new System.Collections.ObjectModel.Collection<Lang_string>();
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Config
    {
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConfigOperator Operator { get; set; }

        [Newtonsoft.Json.JsonProperty("negate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Negate { get; set; }

        [Newtonsoft.Json.JsonProperty("nodes", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Node> Nodes { get; set; } = new System.Collections.ObjectModel.Collection<Node>();
    }

    /// <summary>
    /// Defines a configuration node in an NVD applicability statement.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Node
    {
        [Newtonsoft.Json.JsonProperty("operator", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public NodeOperator Operator { get; set; }

        [Newtonsoft.Json.JsonProperty("negate", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public bool Negate { get; set; }

        [Newtonsoft.Json.JsonProperty("cpeMatch", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<Cpe_match> CpeMatch { get; set; } = new System.Collections.ObjectModel.Collection<Cpe_match>();
    }

    /// <summary>
    /// CPE match string or range
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Cpe_match
    {
        [Newtonsoft.Json.JsonProperty("vulnerable", Required = Newtonsoft.Json.Required.Always)]
        public bool Vulnerable { get; set; }

        [Newtonsoft.Json.JsonProperty("criteria", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Criteria { get; set; }

        [Newtonsoft.Json.JsonProperty("matchCriteriaId", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid MatchCriteriaId { get; set; }

        [Newtonsoft.Json.JsonProperty("versionStartExcluding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionStartExcluding { get; set; }

        [Newtonsoft.Json.JsonProperty("versionStartIncluding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionStartIncluding { get; set; }

        [Newtonsoft.Json.JsonProperty("versionEndExcluding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionEndExcluding { get; set; }

        [Newtonsoft.Json.JsonProperty("versionEndIncluding", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string VersionEndIncluding { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AccessVectorType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK")]
        NETWORK = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ADJACENT_NETWORK")]
        ADJACENT_NETWORK = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL")]
        LOCAL = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AccessComplexityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AuthenticationType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"MULTIPLE")]
        MULTIPLE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"SINGLE")]
        SINGLE = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"PARTIAL")]
        PARTIAL = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"COMPLETE")]
        COMPLETE = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ExploitabilityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROVEN")]
        UNPROVEN = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"PROOF_OF_CONCEPT")]
        PROOF_OF_CONCEPT = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"FUNCTIONAL")]
        FUNCTIONAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum RemediationLevelType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OFFICIAL_FIX")]
        OFFICIAL_FIX = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"TEMPORARY_FIX")]
        TEMPORARY_FIX = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"WORKAROUND")]
        WORKAROUND = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"UNAVAILABLE")]
        UNAVAILABLE = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ReportConfidenceType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNCONFIRMED")]
        UNCONFIRMED = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"UNCORROBORATED")]
        UNCORROBORATED = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"CONFIRMED")]
        CONFIRMED = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CollateralDamagePotentialType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW_MEDIUM")]
        LOW_MEDIUM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM_HIGH")]
        MEDIUM_HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 4,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 5
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum TargetDistributionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaRequirementType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Json
    {
        /// <summary>
        /// CVSS Version
        /// </summary>
        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public JsonVersion Version { get; set; }

        [Newtonsoft.Json.JsonProperty("vectorString", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^((AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))/)*(AV:[NAL]|AC:[LMH]|Au:[MSN]|[CIA]:[NPC]|E:(U|POC|F|H|ND)|RL:(OF|TF|W|U|ND)|RC:(UC|UR|C|ND)|CDP:(N|L|LM|MH|H|ND)|TD:(N|L|M|H|ND)|[CIA]R:(L|M|H|ND))$")]
        public string VectorString { get; set; }

        [Newtonsoft.Json.JsonProperty("accessVector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AccessVectorType AccessVector { get; set; }

        [Newtonsoft.Json.JsonProperty("accessComplexity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AccessComplexityType AccessComplexity { get; set; }

        [Newtonsoft.Json.JsonProperty("authentication", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AuthenticationType Authentication { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType ConfidentialityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType IntegrityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType AvailabilityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("baseScore", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double BaseScore { get; set; }

        [Newtonsoft.Json.JsonProperty("exploitability", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ExploitabilityType Exploitability { get; set; }

        [Newtonsoft.Json.JsonProperty("remediationLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RemediationLevelType RemediationLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("reportConfidence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ReportConfidenceType ReportConfidence { get; set; }

        [Newtonsoft.Json.JsonProperty("temporalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double TemporalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("collateralDamagePotential", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CollateralDamagePotentialType CollateralDamagePotential { get; set; }

        [Newtonsoft.Json.JsonProperty("targetDistribution", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public TargetDistributionType TargetDistribution { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType ConfidentialityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType IntegrityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType AvailabilityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("environmentalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double EnvironmentalScore { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AttackVectorType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK")]
        NETWORK = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ADJACENT_NETWORK")]
        ADJACENT_NETWORK = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL")]
        LOCAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PHYSICAL")]
        PHYSICAL = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedAttackVectorType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK")]
        NETWORK = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ADJACENT_NETWORK")]
        ADJACENT_NETWORK = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL")]
        LOCAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PHYSICAL")]
        PHYSICAL = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AttackComplexityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedAttackComplexityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PrivilegesRequiredType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedPrivilegesRequiredType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum UserInteractionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REQUIRED")]
        REQUIRED = 1

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedUserInteractionType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REQUIRED")]
        REQUIRED = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ScopeType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNCHANGED")]
        UNCHANGED = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"CHANGED")]
        CHANGED = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedScopeType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNCHANGED")]
        UNCHANGED = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"CHANGED")]
        CHANGED = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedCiaType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ExploitCodeMaturityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROVEN")]
        UNPROVEN = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"PROOF_OF_CONCEPT")]
        PROOF_OF_CONCEPT = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"FUNCTIONAL")]
        FUNCTIONAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum RemediationLevelType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OFFICIAL_FIX")]
        OFFICIAL_FIX = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"TEMPORARY_FIX")]
        TEMPORARY_FIX = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"WORKAROUND")]
        WORKAROUND = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"UNAVAILABLE")]
        UNAVAILABLE = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ConfidenceType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REASONABLE")]
        REASONABLE = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"CONFIRMED")]
        CONFIRMED = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaRequirementType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum SeverityType
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"CRITICAL")]
        CRITICAL = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Json2
    {
        /// <summary>
        /// CVSS Version
        /// </summary>
        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Json2Version Version { get; set; }

        [Newtonsoft.Json.JsonProperty("vectorString", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^CVSS:3[.]0/((AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XUNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])/)*(AV:[NALP]|AC:[LH]|PR:[UNLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XUNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])$")]
        public string VectorString { get; set; }

        [Newtonsoft.Json.JsonProperty("attackVector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AttackVectorType AttackVector { get; set; }

        [Newtonsoft.Json.JsonProperty("attackComplexity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AttackComplexityType AttackComplexity { get; set; }

        [Newtonsoft.Json.JsonProperty("privilegesRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PrivilegesRequiredType PrivilegesRequired { get; set; }

        [Newtonsoft.Json.JsonProperty("userInteraction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UserInteractionType UserInteraction { get; set; }

        [Newtonsoft.Json.JsonProperty("scope", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ScopeType Scope { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType2 ConfidentialityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType2 IntegrityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType2 AvailabilityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("baseScore", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double BaseScore { get; set; }

        [Newtonsoft.Json.JsonProperty("baseSeverity", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType BaseSeverity { get; set; }

        [Newtonsoft.Json.JsonProperty("exploitCodeMaturity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ExploitCodeMaturityType ExploitCodeMaturity { get; set; }

        [Newtonsoft.Json.JsonProperty("remediationLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RemediationLevelType2 RemediationLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("reportConfidence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConfidenceType ReportConfidence { get; set; }

        [Newtonsoft.Json.JsonProperty("temporalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double TemporalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("temporalSeverity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType TemporalSeverity { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType2 ConfidentialityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType2 IntegrityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType2 AvailabilityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAttackVector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedAttackVectorType ModifiedAttackVector { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAttackComplexity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedAttackComplexityType ModifiedAttackComplexity { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedPrivilegesRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedPrivilegesRequiredType ModifiedPrivilegesRequired { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedUserInteraction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedUserInteractionType ModifiedUserInteraction { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedScope", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedScopeType ModifiedScope { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedConfidentialityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType ModifiedConfidentialityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedIntegrityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType ModifiedIntegrityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAvailabilityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType ModifiedAvailabilityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("environmentalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double EnvironmentalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("environmentalSeverity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType EnvironmentalSeverity { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AttackVectorType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK")]
        NETWORK = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ADJACENT_NETWORK")]
        ADJACENT_NETWORK = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL")]
        LOCAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PHYSICAL")]
        PHYSICAL = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedAttackVectorType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NETWORK")]
        NETWORK = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"ADJACENT_NETWORK")]
        ADJACENT_NETWORK = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"LOCAL")]
        LOCAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"PHYSICAL")]
        PHYSICAL = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum AttackComplexityType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedAttackComplexityType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum PrivilegesRequiredType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedPrivilegesRequiredType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum UserInteractionType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REQUIRED")]
        REQUIRED = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedUserInteractionType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REQUIRED")]
        REQUIRED = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ScopeType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNCHANGED")]
        UNCHANGED = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"CHANGED")]
        CHANGED = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedScopeType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNCHANGED")]
        UNCHANGED = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"CHANGED")]
        CHANGED = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaType3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ModifiedCiaType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ExploitCodeMaturityType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNPROVEN")]
        UNPROVEN = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"PROOF_OF_CONCEPT")]
        PROOF_OF_CONCEPT = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"FUNCTIONAL")]
        FUNCTIONAL = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum RemediationLevelType3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"OFFICIAL_FIX")]
        OFFICIAL_FIX = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"TEMPORARY_FIX")]
        TEMPORARY_FIX = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"WORKAROUND")]
        WORKAROUND = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"UNAVAILABLE")]
        UNAVAILABLE = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ConfidenceType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"UNKNOWN")]
        UNKNOWN = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"REASONABLE")]
        REASONABLE = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"CONFIRMED")]
        CONFIRMED = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CiaRequirementType3
    {

        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"NOT_DEFINED")]
        NOT_DEFINED = 3
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum SeverityType2
    {

        [System.Runtime.Serialization.EnumMember(Value = @"NONE")]
        NONE = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"LOW")]
        LOW = 1,


        [System.Runtime.Serialization.EnumMember(Value = @"MEDIUM")]
        MEDIUM = 2,


        [System.Runtime.Serialization.EnumMember(Value = @"HIGH")]
        HIGH = 3,


        [System.Runtime.Serialization.EnumMember(Value = @"CRITICAL")]
        CRITICAL = 4
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Json3
    {
        /// <summary>
        /// CVSS Version
        /// </summary>
        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public Json3Version Version { get; set; }

        [Newtonsoft.Json.JsonProperty("vectorString", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [System.ComponentModel.DataAnnotations.RegularExpression(@"^CVSS:3[.]1/((AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])/)*(AV:[NALP]|AC:[LH]|PR:[NLH]|UI:[NR]|S:[UC]|[CIA]:[NLH]|E:[XUPFH]|RL:[XOTWU]|RC:[XURC]|[CIA]R:[XLMH]|MAV:[XNALP]|MAC:[XLH]|MPR:[XNLH]|MUI:[XNR]|MS:[XUC]|M[CIA]:[XNLH])$")]
        public string VectorString { get; set; }

        [Newtonsoft.Json.JsonProperty("attackVector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AttackVectorType2 AttackVector { get; set; }

        [Newtonsoft.Json.JsonProperty("attackComplexity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public AttackComplexityType2 AttackComplexity { get; set; }

        [Newtonsoft.Json.JsonProperty("privilegesRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PrivilegesRequiredType2 PrivilegesRequired { get; set; }

        [Newtonsoft.Json.JsonProperty("userInteraction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UserInteractionType2 UserInteraction { get; set; }

        [Newtonsoft.Json.JsonProperty("scope", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ScopeType2 Scope { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType3 ConfidentialityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType3 IntegrityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaType3 AvailabilityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("baseScore", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double BaseScore { get; set; }

        [Newtonsoft.Json.JsonProperty("baseSeverity", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType2 BaseSeverity { get; set; }

        [Newtonsoft.Json.JsonProperty("exploitCodeMaturity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ExploitCodeMaturityType2 ExploitCodeMaturity { get; set; }

        [Newtonsoft.Json.JsonProperty("remediationLevel", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public RemediationLevelType3 RemediationLevel { get; set; }

        [Newtonsoft.Json.JsonProperty("reportConfidence", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ConfidenceType2 ReportConfidence { get; set; }

        [Newtonsoft.Json.JsonProperty("temporalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double TemporalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("temporalSeverity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType2 TemporalSeverity { get; set; }

        [Newtonsoft.Json.JsonProperty("confidentialityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType3 ConfidentialityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("integrityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType3 IntegrityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("availabilityRequirement", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CiaRequirementType3 AvailabilityRequirement { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAttackVector", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedAttackVectorType2 ModifiedAttackVector { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAttackComplexity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedAttackComplexityType2 ModifiedAttackComplexity { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedPrivilegesRequired", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedPrivilegesRequiredType2 ModifiedPrivilegesRequired { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedUserInteraction", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedUserInteractionType2 ModifiedUserInteraction { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedScope", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedScopeType2 ModifiedScope { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedConfidentialityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType2 ModifiedConfidentialityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedIntegrityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType2 ModifiedIntegrityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("modifiedAvailabilityImpact", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public ModifiedCiaType2 ModifiedAvailabilityImpact { get; set; }

        [Newtonsoft.Json.JsonProperty("environmentalScore", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0D, 10D)]
        public double EnvironmentalScore { get; set; }

        [Newtonsoft.Json.JsonProperty("environmentalSeverity", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public SeverityType2 EnvironmentalSeverity { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Schema
    {
        [Newtonsoft.Json.JsonProperty("resultsPerPage", Required = Newtonsoft.Json.Required.Always)]
        public int ResultsPerPage { get; set; }

        [Newtonsoft.Json.JsonProperty("startIndex", Required = Newtonsoft.Json.Required.Always)]
        public int StartIndex { get; set; }

        [Newtonsoft.Json.JsonProperty("totalResults", Required = Newtonsoft.Json.Required.Always)]
        public int TotalResults { get; set; }

        [Newtonsoft.Json.JsonProperty("format", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Format { get; set; }

        [Newtonsoft.Json.JsonProperty("version", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public string Version { get; set; }

        [Newtonsoft.Json.JsonProperty("timestamp", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.DateTimeOffset Timestamp { get; set; }

        /// <summary>
        /// NVD feed array of CVE
        /// </summary>
        [Newtonsoft.Json.JsonProperty("vulnerabilities", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.Generic.ICollection<CveItemNewApi> Vulnerabilities { get; set; } = new System.Collections.ObjectModel.Collection<CveItemNewApi>();
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Metrics
    {
        /// <summary>
        /// CVSS V3.1 score.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("cvssMetricV31", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CvssV31> CvssMetricV31 { get; set; }

        /// <summary>
        /// CVSS V3.0 score.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("cvssMetricV30", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CvssV30> CvssMetricV30 { get; set; }

        /// <summary>
        /// CVSS V2.0 score.
        /// </summary>
        [Newtonsoft.Json.JsonProperty("cvssMetricV2", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.ICollection<CvssV2> CvssMetricV2 { get; set; }
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CvssV2Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Primary")]
        Primary = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Secondary")]
        Secondary = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CvssV30Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Primary")]
        Primary = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Secondary")]
        Secondary = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum CvssV31Type
    {

        [System.Runtime.Serialization.EnumMember(Value = @"Primary")]
        Primary = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"Secondary")]
        Secondary = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum ConfigOperator
    {

        [System.Runtime.Serialization.EnumMember(Value = @"AND")]
        AND = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"OR")]
        OR = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum NodeOperator
    {

        [System.Runtime.Serialization.EnumMember(Value = @"AND")]
        AND = 0,


        [System.Runtime.Serialization.EnumMember(Value = @"OR")]
        OR = 1
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum JsonVersion
    {

        [System.Runtime.Serialization.EnumMember(Value = @"2.0")]
        _2_0 = 0
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Json2Version
    {

        [System.Runtime.Serialization.EnumMember(Value = @"3.0")]
        _3_0 = 0
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum Json3Version
    {

        [System.Runtime.Serialization.EnumMember(Value = @"3.1")]
        _3_1 = 0
    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.8.0.0 (Newtonsoft.Json v9.0.0.0)")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }
}